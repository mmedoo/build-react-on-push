name: 'Build and Publish React'

branding:
  color: 'gray-dark'
  icon: 'anchor'
  
description: 'A GitHub Action to build and publish your React App'

inputs:

  GITHUB_TOKEN:
    description: 'GitHub token for authentication'
    required: true

  APP_DIRECTORY:
    description: 'Directory in which the app is located (default is root)'
    required: false
    default: '.'
    
  TARGET_DIRECTORY:
    description: 'Directory in which the files shall be placed (default is root)'
    required: false
    default: '.'
    
  BRANCH_NAME:
    description: 'Branch name to which the build artifacts will be pushed (default is build)'
    required: false
    default: 'build'

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      

    - name: Cache npm dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      shell: bash
      run: |
        cd ${{ inputs.APP_DIRECTORY }}
        
        npm ci
      
    - name: Build the app
      shell: bash
      run: |
        cd ${{ inputs.APP_DIRECTORY }}
        
        CI=false npm run build

        for item in $(ls -A); do
          if [ "$item" != "build" ] && [ "$item" != ".git" ]; then
            echo "Removing $item"
            rm -rf "$item"
          fi
        done
      
    - name: Publish build artifacts
      shell: bash
      if: success()
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
          
      run: |
        BRANCH_NAME="${{ inputs.BRANCH_NAME }}"
        TARGET_DIR="${{ inputs.TARGET_DIRECTORY }}"
        APP_DIR="${{ inputs.APP_DIRECTORY }}"
        
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git fetch origin
        git switch $BRANCH_NAME || git switch --orphan $BRANCH_NAME
        
        cp -r "$APP_DIR/build/"* "$TARGET_DIR" || mkdir -p "$TARGET_DIR" && cp -r "$APP_DIR/build/"* "$TARGET_DIR"
        rm -rf "$APP_DIR" || rm -rf build

        git add "$TARGET_DIR"
        git commit -m 'Publish build artifacts'
        git push https://x-access-token:${{ inputs.GITHUB_TOKEN }}@github.com/${{ github.repository }} $BRANCH_NAME --force
